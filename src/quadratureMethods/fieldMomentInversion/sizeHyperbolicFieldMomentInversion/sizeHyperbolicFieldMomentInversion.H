/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 2015-2018 Alberto Passalacqua
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::sizeHyperbolicFieldMomentInversion

Description
    Invert volVectorMomentFieldSet using basic hyperbolic conditional
    moment inversion.

SourceFiles
    sizeHyperbolicFieldMomentInversion.C

\*---------------------------------------------------------------------------*/

#ifndef sizeHyperbolicFieldMomentInversion_H
#define sizeHyperbolicFieldMomentInversion_H

#include "fieldMomentInversion.H"
#include "multivariateMomentSet.H"
#include "sizeCHyQMOM.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

/*---------------------------------------------------------------------------*\
                Class sizeHyperbolicFieldMomentInversion Declaration
\*---------------------------------------------------------------------------*/

class sizeHyperbolicFieldMomentInversion
:
    public fieldMomentInversion
{
    // Private Member Functions

        //- Moment inverter
        autoPtr<sizeCHyQMOM> momentInverter_;

        //- Disallow default bitwise copy construct
        sizeHyperbolicFieldMomentInversion(const sizeHyperbolicFieldMomentInversion&);

        //- Disallow default bitwise assignment
        void operator=(const sizeHyperbolicFieldMomentInversion&);


public:

    //- Runtime type information
    TypeName("sizeHyperbolicFieldMomentInversion");


    // Constructors

        //- Construct from dictionary
        sizeHyperbolicFieldMomentInversion
        (
            const dictionary& dict,
            const fvMesh& mesh,
            const labelListList& momentOrders,
            const labelListList& nodeIndexes,
            const label nSecondaryNodes
        );


    //- Destructor
        ~sizeHyperbolicFieldMomentInversion();


    // Public member Functions

        // Scalar moment inversions

            //- Invert moments in the entire computational domain
            virtual void invert
            (
                const volScalarMomentFieldSet& moments,
                mappedPtrList<volScalarNode>& nodes
            );

            //- Invert moments on boundaries
            virtual void invertBoundaryMoments
            (
                const volScalarMomentFieldSet& moments,
                mappedPtrList<volScalarNode>& nodes
            );

            //- Invert moments in a single cell
            virtual bool invertLocalMoments
            (
                const volScalarMomentFieldSet& moments,
                mappedPtrList<volScalarNode>& nodes,
                const label celli,
                const bool fatalErrorOnFailedRealizabilityTest = true
            );


        // Velocity moment inversions

            //- Invert moments in the entire computational domain
            virtual void invert
            (
                const volVelocityMomentFieldSet& moments,
                mappedPtrList<volVelocityNode>& nodes
            );

            //- Invert moments on boundaries
            virtual void invertBoundaryMoments
            (
                const volVelocityMomentFieldSet& moments,
                mappedPtrList<volVelocityNode>& nodes
            );

            //- Invert moments in a single cell
            virtual bool invertLocalMoments
            (
                const volVelocityMomentFieldSet& moments,
                mappedPtrList<volVelocityNode>& nodes,
                const label celli,
                const bool fatalErrorOnFailedRealizabilityTest = true
            );
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
