/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pbeTransportFoam;

startFrom       startTime;//latestTime;

startTime       0;

stopAt          endTime;

endTime         5000;

deltaT          1e-3;

writeControl    adjustableRunTime;

writeInterval   0.1;

purgeWrite      100;

writeFormat     binary;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   12;

runTimeModifiable true;

adjustTimeStep  yes;

maxCo           0.5;

maxDeltaT       1;

functions
{
    d10Average
    {
        type                coded;
        functionObjectLibs  ("libutilityFunctionObjects.so");
        name                d10VolumeAverage;
        writeControl        timeStep;

        codeExecute
        #{
        const volScalarField& m0 =
            mesh().lookupObject<volScalarField>("moment.0000.populationBalance");

        const volScalarField& m1 =
            mesh().lookupObject<volScalarField>("moment.1000.populationBalance");

        volScalarField d10(m1/m0);

        scalar volAverage = 0;
        scalar totalVolume = 0;

        forAll (d10, cellI)
        {
            totalVolume += mesh().V()[cellI];
        }

        forAll (d10, cellI)
        {
            volAverage += d10[cellI]*mesh().V()[cellI]/totalVolume;
        }

        Info<<"Volume averaged normalized d10: " << volAverage/(2.0e-6) << endl;

        #};
    }
}


// ************************************************************************* //
