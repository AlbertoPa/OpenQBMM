/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      momentGenerationDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

phases
(
    particles
);

boundaries
{
    ".*"
    {
        type calculated;
    }
}

U 1;
nU -1;
w  0.000625;
d1 1.0e-3;
d2 3.0e-3;

particles
{
    type                weightsAndAbscissae;
    weightDimension     [0 0 0 0 0 0 0];
    abscissaDimension   [0 1 -1 0 0 0 0];
    abscissaDimension0  [0 1 0 0 0 0 0];

    default
    {
        node0
        {
            weight  $w;
            abscissa ($d1 $U $U $U);
        }
        node1
        {
            weight  $w;
            abscissa ($d1 $U $U $nU);
        }
        node2
        {
            weight  $w;
            abscissa ($d1 $U $nU $U);
        }
        node3
        {
            weight  $w;
            abscissa ($d1 $U $nU $nU);
        }
        node4
        {
            weight  $w;
            abscissa ($d1 $nU $U $U);
        }
        node5
        {
            weight  $w;
            abscissa ($d1 $nU $U $nU);
        }
        node6
        {
            weight  $w;
            abscissa ($d1 $nU $nU $U);
        }
        node7
        {
            weight  $w;
            abscissa ($d1 $nU $nU $nU);
        }

        node8
        {
            weight  $w;
            abscissa ($d2 $U $U $U);
        }
        node9
        {
            weight  $w;
            abscissa ($d2 $U $U $nU);
        }
        node10
        {
            weight  $w;
            abscissa ($d2 $U $nU $U);
        }
        node11
        {
            weight  $w;
            abscissa ($d2 $U $nU $nU);
        }
        node12
        {
            weight  $w;
            abscissa ($d2 $nU $U $U);
        }
        node13
        {
            weight  $w;
            abscissa ($d2 $nU $U $nU);
        }
        node14
        {
            weight  $w;
            abscissa ($d2 $nU $nU $U);
        }
        node15
        {
            weight  $w;
            abscissa ($d2 $nU $nU $nU);
        }
    }
}


// ************************************************************************* //
